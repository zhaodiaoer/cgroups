// Code generated by protoc-gen-go.
// source: github.com/containerd/cgroups/cgroup2/stats/metrics.proto
// DO NOT EDIT!

/*
Package github_com_containerd_cgroups_cgroup2_stats is a generated protocol buffer package.

It is generated from these files:

	github.com/containerd/cgroups/cgroup2/stats/metrics.proto

It has these top-level messages:

	Metrics
	PSIData
	PSIStats
	PidsStat
	CPUStat
	MemoryStat
	MemoryEvents
	RdmaStat
	RdmaEntry
	IOStat
	IOEntry
	HugeTlbStat
*/
package stats

import proto "github.com/golang/protobuf/proto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal

type Metrics struct {
	Pids         *PidsStat      `protobuf:"bytes,1,opt,name=pids" json:"pids,omitempty"`
	CPU          *CPUStat       `protobuf:"bytes,2,opt,name=cpu" json:"cpu,omitempty"`
	Memory       *MemoryStat    `protobuf:"bytes,4,opt,name=memory" json:"memory,omitempty"`
	Rdma         *RdmaStat      `protobuf:"bytes,5,opt,name=rdma" json:"rdma,omitempty"`
	Io           *IOStat        `protobuf:"bytes,6,opt,name=io" json:"io,omitempty"`
	Hugetlb      []*HugeTlbStat `protobuf:"bytes,7,rep,name=hugetlb" json:"hugetlb,omitempty"`
	MemoryEvents *MemoryEvents  `protobuf:"bytes,8,opt,name=memory_events" json:"memory_events,omitempty"`
}

func (m *Metrics) Reset()         { *m = Metrics{} }
func (m *Metrics) String() string { return proto.CompactTextString(m) }
func (*Metrics) ProtoMessage()    {}

func (m *Metrics) GetPids() *PidsStat {
	if m != nil {
		return m.Pids
	}
	return nil
}

func (m *Metrics) GetCPU() *CPUStat {
	if m != nil {
		return m.CPU
	}
	return nil
}

func (m *Metrics) GetMemory() *MemoryStat {
	if m != nil {
		return m.Memory
	}
	return nil
}

func (m *Metrics) GetRdma() *RdmaStat {
	if m != nil {
		return m.Rdma
	}
	return nil
}

func (m *Metrics) GetIo() *IOStat {
	if m != nil {
		return m.Io
	}
	return nil
}

func (m *Metrics) GetHugetlb() []*HugeTlbStat {
	if m != nil {
		return m.Hugetlb
	}
	return nil
}

func (m *Metrics) GetMemoryEvents() *MemoryEvents {
	if m != nil {
		return m.MemoryEvents
	}
	return nil
}

type PSIData struct {
	Avg10  float64 `protobuf:"fixed64,1,opt,name=avg10" json:"avg10,omitempty"`
	Avg60  float64 `protobuf:"fixed64,2,opt,name=avg60" json:"avg60,omitempty"`
	Avg300 float64 `protobuf:"fixed64,3,opt,name=avg300" json:"avg300,omitempty"`
	Total  uint64  `protobuf:"varint,4,opt,name=total" json:"total,omitempty"`
}

func (m *PSIData) Reset()         { *m = PSIData{} }
func (m *PSIData) String() string { return proto.CompactTextString(m) }
func (*PSIData) ProtoMessage()    {}

type PSIStats struct {
	Some *PSIData `protobuf:"bytes,1,opt,name=some" json:"some,omitempty"`
	Full *PSIData `protobuf:"bytes,2,opt,name=full" json:"full,omitempty"`
}

func (m *PSIStats) Reset()         { *m = PSIStats{} }
func (m *PSIStats) String() string { return proto.CompactTextString(m) }
func (*PSIStats) ProtoMessage()    {}

func (m *PSIStats) GetSome() *PSIData {
	if m != nil {
		return m.Some
	}
	return nil
}

func (m *PSIStats) GetFull() *PSIData {
	if m != nil {
		return m.Full
	}
	return nil
}

type PidsStat struct {
	Current uint64 `protobuf:"varint,1,opt,name=current" json:"current,omitempty"`
	Limit   uint64 `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
}

func (m *PidsStat) Reset()         { *m = PidsStat{} }
func (m *PidsStat) String() string { return proto.CompactTextString(m) }
func (*PidsStat) ProtoMessage()    {}

type CPUStat struct {
	UsageUsec     uint64    `protobuf:"varint,1,opt,name=usage_usec" json:"usage_usec,omitempty"`
	UserUsec      uint64    `protobuf:"varint,2,opt,name=user_usec" json:"user_usec,omitempty"`
	SystemUsec    uint64    `protobuf:"varint,3,opt,name=system_usec" json:"system_usec,omitempty"`
	NrPeriods     uint64    `protobuf:"varint,4,opt,name=nr_periods" json:"nr_periods,omitempty"`
	NrThrottled   uint64    `protobuf:"varint,5,opt,name=nr_throttled" json:"nr_throttled,omitempty"`
	ThrottledUsec uint64    `protobuf:"varint,6,opt,name=throttled_usec" json:"throttled_usec,omitempty"`
	PSI           *PSIStats `protobuf:"bytes,7,opt,name=psi" json:"psi,omitempty"`
}

func (m *CPUStat) Reset()         { *m = CPUStat{} }
func (m *CPUStat) String() string { return proto.CompactTextString(m) }
func (*CPUStat) ProtoMessage()    {}

func (m *CPUStat) GetPSI() *PSIStats {
	if m != nil {
		return m.PSI
	}
	return nil
}

type MemoryStat struct {
	Anon                  uint64    `protobuf:"varint,1,opt,name=anon" json:"anon,omitempty"`
	File                  uint64    `protobuf:"varint,2,opt,name=file" json:"file,omitempty"`
	KernelStack           uint64    `protobuf:"varint,3,opt,name=kernel_stack" json:"kernel_stack,omitempty"`
	Slab                  uint64    `protobuf:"varint,4,opt,name=slab" json:"slab,omitempty"`
	Sock                  uint64    `protobuf:"varint,5,opt,name=sock" json:"sock,omitempty"`
	Shmem                 uint64    `protobuf:"varint,6,opt,name=shmem" json:"shmem,omitempty"`
	FileMapped            uint64    `protobuf:"varint,7,opt,name=file_mapped" json:"file_mapped,omitempty"`
	FileDirty             uint64    `protobuf:"varint,8,opt,name=file_dirty" json:"file_dirty,omitempty"`
	FileWriteback         uint64    `protobuf:"varint,9,opt,name=file_writeback" json:"file_writeback,omitempty"`
	AnonThp               uint64    `protobuf:"varint,10,opt,name=anon_thp" json:"anon_thp,omitempty"`
	InactiveAnon          uint64    `protobuf:"varint,11,opt,name=inactive_anon" json:"inactive_anon,omitempty"`
	ActiveAnon            uint64    `protobuf:"varint,12,opt,name=active_anon" json:"active_anon,omitempty"`
	InactiveFile          uint64    `protobuf:"varint,13,opt,name=inactive_file" json:"inactive_file,omitempty"`
	ActiveFile            uint64    `protobuf:"varint,14,opt,name=active_file" json:"active_file,omitempty"`
	Unevictable           uint64    `protobuf:"varint,15,opt,name=unevictable" json:"unevictable,omitempty"`
	SlabReclaimable       uint64    `protobuf:"varint,16,opt,name=slab_reclaimable" json:"slab_reclaimable,omitempty"`
	SlabUnreclaimable     uint64    `protobuf:"varint,17,opt,name=slab_unreclaimable" json:"slab_unreclaimable,omitempty"`
	Pgfault               uint64    `protobuf:"varint,18,opt,name=pgfault" json:"pgfault,omitempty"`
	Pgmajfault            uint64    `protobuf:"varint,19,opt,name=pgmajfault" json:"pgmajfault,omitempty"`
	WorkingsetRefault     uint64    `protobuf:"varint,20,opt,name=workingset_refault" json:"workingset_refault,omitempty"`
	WorkingsetActivate    uint64    `protobuf:"varint,21,opt,name=workingset_activate" json:"workingset_activate,omitempty"`
	WorkingsetNodereclaim uint64    `protobuf:"varint,22,opt,name=workingset_nodereclaim" json:"workingset_nodereclaim,omitempty"`
	Pgrefill              uint64    `protobuf:"varint,23,opt,name=pgrefill" json:"pgrefill,omitempty"`
	Pgscan                uint64    `protobuf:"varint,24,opt,name=pgscan" json:"pgscan,omitempty"`
	Pgsteal               uint64    `protobuf:"varint,25,opt,name=pgsteal" json:"pgsteal,omitempty"`
	Pgactivate            uint64    `protobuf:"varint,26,opt,name=pgactivate" json:"pgactivate,omitempty"`
	Pgdeactivate          uint64    `protobuf:"varint,27,opt,name=pgdeactivate" json:"pgdeactivate,omitempty"`
	Pglazyfree            uint64    `protobuf:"varint,28,opt,name=pglazyfree" json:"pglazyfree,omitempty"`
	Pglazyfreed           uint64    `protobuf:"varint,29,opt,name=pglazyfreed" json:"pglazyfreed,omitempty"`
	ThpFaultAlloc         uint64    `protobuf:"varint,30,opt,name=thp_fault_alloc" json:"thp_fault_alloc,omitempty"`
	ThpCollapseAlloc      uint64    `protobuf:"varint,31,opt,name=thp_collapse_alloc" json:"thp_collapse_alloc,omitempty"`
	Usage                 uint64    `protobuf:"varint,32,opt,name=usage" json:"usage,omitempty"`
	UsageLimit            uint64    `protobuf:"varint,33,opt,name=usage_limit" json:"usage_limit,omitempty"`
	SwapUsage             uint64    `protobuf:"varint,34,opt,name=swap_usage" json:"swap_usage,omitempty"`
	SwapLimit             uint64    `protobuf:"varint,35,opt,name=swap_limit" json:"swap_limit,omitempty"`
	MaxUsage              uint64    `protobuf:"varint,36,opt,name=max_usage" json:"max_usage,omitempty"`
	SwapMaxUsage          uint64    `protobuf:"varint,37,opt,name=swap_max_usage" json:"swap_max_usage,omitempty"`
	PSI                   *PSIStats `protobuf:"bytes,38,opt,name=psi" json:"psi,omitempty"`
}

func (m *MemoryStat) Reset()         { *m = MemoryStat{} }
func (m *MemoryStat) String() string { return proto.CompactTextString(m) }
func (*MemoryStat) ProtoMessage()    {}

func (m *MemoryStat) GetPSI() *PSIStats {
	if m != nil {
		return m.PSI
	}
	return nil
}

type MemoryEvents struct {
	Low     uint64 `protobuf:"varint,1,opt,name=low" json:"low,omitempty"`
	High    uint64 `protobuf:"varint,2,opt,name=high" json:"high,omitempty"`
	Max     uint64 `protobuf:"varint,3,opt,name=max" json:"max,omitempty"`
	Oom     uint64 `protobuf:"varint,4,opt,name=oom" json:"oom,omitempty"`
	OomKill uint64 `protobuf:"varint,5,opt,name=oom_kill" json:"oom_kill,omitempty"`
}

func (m *MemoryEvents) Reset()         { *m = MemoryEvents{} }
func (m *MemoryEvents) String() string { return proto.CompactTextString(m) }
func (*MemoryEvents) ProtoMessage()    {}

type RdmaStat struct {
	Current []*RdmaEntry `protobuf:"bytes,1,rep,name=current" json:"current,omitempty"`
	Limit   []*RdmaEntry `protobuf:"bytes,2,rep,name=limit" json:"limit,omitempty"`
}

func (m *RdmaStat) Reset()         { *m = RdmaStat{} }
func (m *RdmaStat) String() string { return proto.CompactTextString(m) }
func (*RdmaStat) ProtoMessage()    {}

func (m *RdmaStat) GetCurrent() []*RdmaEntry {
	if m != nil {
		return m.Current
	}
	return nil
}

func (m *RdmaStat) GetLimit() []*RdmaEntry {
	if m != nil {
		return m.Limit
	}
	return nil
}

type RdmaEntry struct {
	Device     string `protobuf:"bytes,1,opt,name=device" json:"device,omitempty"`
	HcaHandles uint32 `protobuf:"varint,2,opt,name=hca_handles" json:"hca_handles,omitempty"`
	HcaObjects uint32 `protobuf:"varint,3,opt,name=hca_objects" json:"hca_objects,omitempty"`
}

func (m *RdmaEntry) Reset()         { *m = RdmaEntry{} }
func (m *RdmaEntry) String() string { return proto.CompactTextString(m) }
func (*RdmaEntry) ProtoMessage()    {}

type IOStat struct {
	Usage []*IOEntry `protobuf:"bytes,1,rep,name=usage" json:"usage,omitempty"`
	PSI   *PSIStats  `protobuf:"bytes,2,opt,name=psi" json:"psi,omitempty"`
}

func (m *IOStat) Reset()         { *m = IOStat{} }
func (m *IOStat) String() string { return proto.CompactTextString(m) }
func (*IOStat) ProtoMessage()    {}

func (m *IOStat) GetUsage() []*IOEntry {
	if m != nil {
		return m.Usage
	}
	return nil
}

func (m *IOStat) GetPSI() *PSIStats {
	if m != nil {
		return m.PSI
	}
	return nil
}

type IOEntry struct {
	Major  uint64 `protobuf:"varint,1,opt,name=major" json:"major,omitempty"`
	Minor  uint64 `protobuf:"varint,2,opt,name=minor" json:"minor,omitempty"`
	Rbytes uint64 `protobuf:"varint,3,opt,name=rbytes" json:"rbytes,omitempty"`
	Wbytes uint64 `protobuf:"varint,4,opt,name=wbytes" json:"wbytes,omitempty"`
	Rios   uint64 `protobuf:"varint,5,opt,name=rios" json:"rios,omitempty"`
	Wios   uint64 `protobuf:"varint,6,opt,name=wios" json:"wios,omitempty"`
}

func (m *IOEntry) Reset()         { *m = IOEntry{} }
func (m *IOEntry) String() string { return proto.CompactTextString(m) }
func (*IOEntry) ProtoMessage()    {}

type HugeTlbStat struct {
	Current  uint64 `protobuf:"varint,1,opt,name=current" json:"current,omitempty"`
	Max      uint64 `protobuf:"varint,2,opt,name=max" json:"max,omitempty"`
	Pagesize string `protobuf:"bytes,3,opt,name=pagesize" json:"pagesize,omitempty"`
}

func (m *HugeTlbStat) Reset()         { *m = HugeTlbStat{} }
func (m *HugeTlbStat) String() string { return proto.CompactTextString(m) }
func (*HugeTlbStat) ProtoMessage()    {}
